kb_time_20200202
kb_abstract_对Redis数据结构的分析1-hash
kb_tag_RedisDS

命令使用：
E:\software\redis>redis-cli -h 127.0.0.1 -p 6379
127.0.0.1:6379> hset user1 name zuokai
(integer) 1
127.0.0.1:6379> hset user1 age 26
(integer) 1
127.0.0.1:6379> hget user1 name
"zuokai"
127.0.0.1:6379> hget user1 age
"26"

源代码存放于dict.h和dict.c中。

扩容：
当hash内部的元素比较拥挤时，hash碰撞比较频繁，就需要进行扩容。扩容需要申请新的两倍大小的数组，然后将所有的键值对重新分配到新的数组下标对应的链表中（rehash）。
如果hash结构很大，比如有上百万个键值对，那么一次完整的rehash的过程就会耗时很长。这对于单线程的redis来说有点压力大。所以redis采用了渐进式rehash方案。
它会同时保留两个新旧hash结构，在后续的定时任务以及hash结构的读写指令中将旧结构的元素逐渐迁移到新的结构中。这样就可以避免因扩容而导致的线程卡顿现象。

