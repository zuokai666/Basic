kb_time_20200202
kb_abstract_对二叉搜索树的分析
kb_tag_BinarySearchTree

树是一种半线性结构，遍历的方式有4种，分别是先序遍历 ，中序遍历，后序遍历，层次遍历。

进一步限制节点度数，节点度数不超过2的树称为二叉树binary tree

进一步限制顺序性，左孩子 <= root <= 右孩子，普通二叉树就变为了二叉搜索树Binary Search Tree（BST）

为了防止树退化为单链表，BST演变为BBST，平衡二叉搜索树。针对于平衡规则，不同的规则有不同的实现方式。AVL树与红黑树。

与BBST不同，B树旨在减少定位记录时所经历的中间过程，从而加快存取速度，普遍应用于内存访问外存的应用中，例如数据库与文件系统。
B树和B+树区别在于B+树的非叶子节点只包含导航信息，不包含实际的值，所有的叶子节点与相邻的节点使用链表相连，便于区间查找和遍历。





